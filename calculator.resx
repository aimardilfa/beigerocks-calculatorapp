<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYGAAYWFhFWBgYEphYWFaYWFhWmFh
        YVphYWFaYWFhWmFhYVphYWFaYWFhWmFhYVphYWFaYWFhWmFhYVphYWFaYWFhWmFhYVphYWFaYGBgSmBg
        YBVhYWEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYWFhAGFhYSBhYWG3YGBg+V9f
        X/9fX1//YGBg/2FhYf9fX1//X19f/19fX/9hYWH/YWFh/19fX/9fX1//X19f/2FhYf9gYGD/X19f/19f
        X/9gYGD5YWFht2BgYCBhYWEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiYmIAYWFhfWFh
        Yf93d3f/jo6O/46Ojv93d3f/Y2Nj/4ODg/+Pj4//i4uL/2tra/9ra2v/i4uL/4+Pj/+Dg4P/Y2Nj/3Fx
        cf+BgYH/gYGB/3Fxcf9hYWH/YWFhfGJiYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFh
        YQBhYWGkYWFh/7CwsP/i4uL/4uLi/6+vr/9ubm7/zs7O/+Hh4f/e3t7/iYmJ/4mJif/e3t7/4eHh/87O
        zv9ubm7/mZmZ/76+vv++vr7/mpqa/2FhYf9hYWGjYWFhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACgoKAGFhYaVhYWH/sLCw/+Li4v/i4uL/r6+v/25ubv/Ozs7/4eHh/97e3v+JiYn/iYmJ/97e
        3v/h4eH/zs7O/25ubv+ZmZn/vr6+/76+vv+ampr/YWFh/2FhYaUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAKCgoAYWFhpWFhYf92dnb/i4uL/4uLi/92dnb/Y2Nj/4GBgf+MjIz/iIiI/2pq
        av9qamr/iIiI/4yMjP+BgYH/Y2Nj/3BwcP+AgID/gICA/3BwcP9hYWH/YWFhpQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgBhYWGlYWFh/3Z2dv+Li4v/i4uL/3Z2dv9jY2P/gYGB/4yM
        jP+IiIj/ampq/2pqav+IiIj/jIyM/4GBgf9jY2P/cHBw/4CAgP+AgID/cHBw/2FhYf9hYWGlAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoKAGFhYaVhYWH/sLCw/+Li4v/i4uL/r6+v/25u
        bv/Ozs7/4eHh/97e3v+JiYn/iYmJ/97e3v/h4eH/zs7O/25ubv+ZmZn/vr6+/76+vv+ampr/YWFh/2Fh
        YaUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgoAYWFhpWFhYf+wsLD/4uLi/+Li
        4v+vr6//bm5u/87Ozv/h4eH/3t7e/4mJif+JiYn/3t7e/+Hh4f/Ozs7/bm5u/5mZmf++vr7/vr6+/5qa
        mv9hYWH/YWFhpQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgBhYWGlYWFh/3Z2
        dv+Li4v/i4uL/3Z2dv9jY2P/gYGB/4yMjP+IiIj/ampq/2pqav+IiIj/jIyM/4GBgf9jY2P/cHBw/4CA
        gP+AgID/cHBw/2FhYf9hYWGlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoKAGFh
        YaVhYWH/dnZ2/4uLi/+Li4v/dnZ2/2NjY/+BgYH/jIyM/4iIiP9qamr/ampq/4iIiP+MjIz/gYGB/2Nj
        Y/9wcHD/gICA/4CAgP9wcHD/YWFh/2FhYaUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAKCgoAYWFhpWFhYf+wsLD/4uLi/+Li4v+vr6//bm5u/87Ozv/h4eH/3t7e/4mJif+JiYn/3t7e/+Hh
        4f/Ozs7/bm5u/5mZmf++vr7/vr6+/5qamv9hYWH/YWFhpQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAoKCgBhYWGlYWFh/7CwsP/i4uL/4uLi/6+vr/9ubm7/zs7O/+Hh4f/e3t7/iYmJ/4mJ
        if/e3t7/4eHh/87Ozv9ubm7/mZmZ/76+vv++vr7/mpqa/2FhYf9hYWGlAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACgoKAGFhYaVhYWH/dnZ2/4uLi/+Li4v/dnZ2/2NjY/+BgYH/jIyM/4iI
        iP9qamr/ampq/4iIiP+MjIz/gYGB/2NjY/9xcW//goJ+/4KCfv9xcW//YWFh/2FhYaUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgoAYWFhpWFhYf92dnb/i4uL/4uLi/92dnb/Y2Nj/4GB
        gf+MjIz/iIiI/2pqav9qamr/iIiI/4yMjP+BgYH/ZGRj/11de/9aWpf/WlqX/15ee/9hYWH/YWFhpQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgBhYWGlYWFh/7CwsP/i4uL/4uLi/6+v
        r/9ubm7/zs7O/+Hh4f/e3t7/iYmJ/4mJif/e3t7/4eHh/87Ozv9ubm7/V1fC/1JS//9SUv//WFjC/2Fh
        Yf9hYWGlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoKAGFhYaVhYWH/sLCw/+Li
        4v/i4uL/r6+v/25ubv/Ozs7/4eHh/97e3v+JiYn/iYmJ/97e3v/h4eH/zs7O/25ubv9XV8L/UlL//1JS
        //9YWML/YWFh/2FhYaUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgoAYmJipWJi
        Yv94eHj/jo6O/46Ojv93d3f/ZGRk/4ODg/+Pj4//i4uL/2xsbP9sbGz/i4uL/4+Pj/+Dg4P/ZWVk/19f
        ff9cXJn/XFyZ/19fff9iYmL/YmJipQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJ
        CQBWVlalVlZW/1VVVf9UVFT/VFRU/1VVVf9WVlb/VFRU/1RUVP9UVFT/VlZW/1ZWVv9UVFT/VFRU/1RU
        VP9WVlb/VlZU/1ZWU/9WVlP/VlZU/1ZWVv9WVlalAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABwcHAEJCQqVCQkL/QkFB/0E/QP9BP0D/QT9A/0E/QP9BP0D/QT9A/0E/QP9BP0D/QT9A/0E/
        QP9BP0D/QT9A/0E/QP9BP0D/QT9A/0E/QP9CQUH/QkJC/0JCQqUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAHBwcAQkJCpUJCQv9IWlL/TnNi/05zYv9Oc2L/TnNi/05zYv9Oc2L/TnNi/05z
        Yv9Oc2L/TnNi/05zYv9Pc2L/T3Ni/05zYv9Pc2L/TnNi/0haUv9CQkL/QkJCpQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBwBCQkKlQkJC/1iXef9mzp3/Zcyc/2XMnP9lzJz/Zcyc/2XM
        nP9lzJz/Zcyc/2XMnP9lzJz/Zcyc/2DFlP9gxZT/ZMub/17Ckf9jypn/WJd6/0JCQv9CQkKlAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcHAEJCQqVCQkL/WZx9/2bPnv9lzJz/Zcyc/2XM
        nP9lzJz/Zcyc/2XMnP9lzJz/Zcyc/2XMnP9lzJz/O5Fe/zuSX/9ewpH/LX5K/0+vfP9anX7/QkJC/0JC
        QqUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBwcAQkJCpUJCQv9ZnH3/Zs+e/2XM
        nP9lzJz/Zcyc/2XMnP9lzJz/Zcyc/2XMnP9lzJz/Zcyc/2XMnP9UtIP/VLSD/2LImP9OrHr/XMKQ/1mc
        ff9CQkL/QkJCpQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEJCQgBCQkKkQkJC/1iX
        ef9mzp3/Zcyc/2XMnP9lzJz/Zcyc/2XMnP9lzJz/Zcyc/2XMnP9lzJz/Zcyc/2bNnf9mzZ3/Zcyc/2bO
        nv9mz57/V5d5/0JCQv9CQkKjQkJCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ0NDAEJC
        Qn1CQkL/SFpS/05zYv9Oc2L/TnNi/05zYv9Oc2L/TnNi/05zYv9Oc2L/TnNi/05zYv9Oc2L/TnNi/05z
        Yv9Oc2L/TnNi/05zYv9IWlL/QkJC/0JCQn1CQkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABCQkIAQkJCIUJCQrhCQUH5QT9A/0E/QP9BP0D/QT9A/0E/QP9BP0D/QT9A/0E/QP9BP0D/QT9A/0E/
        QP9BP0D/QT9A/0E/QP9BP0D/QT9A/0JBQflCQkK3QkJCIEJCQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABBQUEAQUFBFUFBQUpCQkJaQkJCWkJCQlpCQkJaQkJCWkJCQlpCQkJaQkJCWkJC
        QlpCQkJaQkJCWkJCQlpCQkJaQkJCWkJCQlpCQkJaQkJCSkJCQhVBQUEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////8AAA/+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gA
        AB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gA
        AB/4AAAf+AAAH/gAAB/8AAA///////////8=
</value>
  </data>
</root>